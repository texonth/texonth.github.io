{"version":3,"sources":["assets/wiki.svg","assets/medium.svg","Components/Visualizator/SortVisualization/SortVisualization.js","Components/SlideDown/SlideDown.js","Components/Visualizator/CodeSnippet/CodeSnippet.js","Components/UI/Logos.js","Components/Visualizator/SortItem/SortItem.js","Components/Visualizator/algorithms/selectionSort.js","Components/Visualizator/algorithms/insertionSort.js","Components/Visualizator/algorithms/heapSort.js","Components/Visualizator/algorithms/bubbleSort.js","Components/Visualizator/algorithms/cocktailSort.js","Components/Visualizator/Visualizator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SortVisualization","state","array","animated","sorted","getCanvasRef","node","_this","_canvasEl","initCanvas","width","offsetWidth","height","initArray","points","min","Math","apply","max","map","el","id","number","color","concat","getColoredPoints","n","arguments","length","undefined","numbers","step","current","i","push","getNNotRandom","draw","setState","canvas","ctx","getContext","clearRect","cw","ch","rectWidth","floor","forEach","fillStyle","fillRect","isSortedHandler","isShakedHandler","sortArray","props","sort","shakeArray","arr","Object","toConsumableArray","randomIndex","random","itemAtIndex","window","requestAnimationFrame","this","react_default","a","createElement","className","ref","onClick","disabled","Component","MySlideDown","isShown","contentShowHandler","slidedown","children","codeSnippet","lib","languages","code","logos","wiki","medium","SortItem","links","link","key","href","target","rel","src","type","alt","description","CodeSnippet_CodeSnippet","name","SlideDown_SlideDown","Visualizator_SortVisualization_SortVisualization","sortName","sortLinks","sortFunc","input","callback","j","buf","sortRaw","cb","heapify","buildMaxHeap","lastElement","swap","heap","index","leftChild","righChild","firstItemIndex","lastItemInde","tmp","temp","left","right","Visualizator","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sorts","objectSpread","selectionSort","insertionSort","bubbleSort","shakerSort","heapSort","renderedSorts","Visualizator_SortItem_SortItem","App","Components_Visualizator_Visualizator","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27b1dc6e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiki.f80ab8f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/medium.2be42526.svg\";","import React, { Component } from 'react';\r\nimport '../Visualization.scss';\r\nclass SortVisualization extends Component {\r\n  state = {\r\n    array: [],\r\n    animated: false,\r\n    sorted: true\r\n  }\r\n  componentDidMount () {\r\n    this.initCanvas();\r\n    this.initArray();\r\n  }\r\n  getCanvasRef = (node) => {this._canvasEl = node};\r\n\r\n  initCanvas = () => {\r\n    this._canvasEl.width = this._canvasEl.offsetWidth;\r\n    this._canvasEl.height = 200;\r\n  }\r\n\r\n  initArray = () => {\r\n    function getNNotRandom(n = 10, min = 0, max = 100) {\r\n      const numbers = [];\r\n      const step = (max - min) / n;\r\n      let current = min;\r\n      for (let i = 0; i < n; i++) {\r\n        numbers.push(current);\r\n        current += step;\r\n      }\r\n      return numbers;\r\n    }\r\n    function getColoredPoints(points) {\r\n      const min = Math.min.apply(null, points),\r\n        max = Math.max.apply(null, points);\r\n      const coloredPoints = points.map((el, id) => {\r\n        const hueMin = 0,\r\n          hueMax = 300;\r\n        const color = `hsl(${(el-min)/(max-min)*(hueMax-hueMin) + hueMin},100%,50%`\r\n        return {\r\n          id,\r\n          number: el,\r\n          color: color\r\n        }\r\n      });\r\n      return coloredPoints;\r\n    }\r\n    const points = getColoredPoints(getNNotRandom(this._canvasEl.width, 0, 200));\r\n    this.draw(points);\r\n    this.setState({array: points})\r\n  }\r\n\r\n  draw = (points) => {\r\n    const canvas = this._canvasEl;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    const cw = canvas.width;\r\n    const ch = canvas.height;\r\n    const rectWidth = Math.floor(cw / points.length);\r\n    points.forEach((el, id) => {\r\n      ctx.fillStyle = el.color;\r\n      ctx.fillRect(id * rectWidth, ch - el.number, rectWidth, el.number);\r\n    })\r\n  }\r\n\r\n  isSortedHandler = () => {\r\n    this.setState({animated: false, sorted: true})\r\n  }\r\n  isShakedHandler = () => {\r\n    this.setState({animated: false, sorted: false})\r\n  }\r\n  sortArray = () => {\r\n    this.setState({animated: true});\r\n    const sorted = this.props.sort(this.state.array, this.draw, this.isSortedHandler);\r\n    this.setState({array:sorted});\r\n  }\r\n  shakeArray = () => {\r\n    this.setState({animated: true});\r\n    const arr = [...this.state.array];\r\n    let i = arr.length - 1;\r\n    const step = () => {\r\n      if(i < 0) {\r\n        this.isShakedHandler();\r\n        return;\r\n      }\r\n      const randomIndex = Math.floor(Math.random() * (i + 1));\r\n      const itemAtIndex = arr[randomIndex];\r\n      arr[randomIndex] = arr[i];\r\n      arr[i] = itemAtIndex;\r\n      i--;\r\n      if( i%4 === 0 )\r\n      {\r\n        this.draw(arr);\r\n        window.requestAnimationFrame(step);\r\n      }\r\n      else {\r\n        step();\r\n      }\r\n    }\r\n    step();\r\n    this.setState({array: arr});\r\n  }\r\n\r\n  render () {\r\n    return (<div className=\"sortviz-block\">\r\n    <div className=\"sortviz-canvas-wrapper\">\r\n    <canvas className=\"sortviz-canvas\" ref={this.getCanvasRef} ></canvas>\r\n    </div>\r\n    <div className=\"sortviz-buttons\">\r\n      <button className=\"sortviz-button\" onClick={this.shakeArray} disabled={this.state.animated}>{!this.state.sorted ? <span>re</span> : null}Shake</button>\r\n      <button className=\"sortviz-button\" onClick={this.sortArray} disabled={this.state.sorted || this.state.animated}>Sort</button>\r\n      </div>\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default SortVisualization;","import React, { Component } from 'react';\r\nimport {SlideDown} from 'react-slidedown';\r\nimport 'react-slidedown/lib/slidedown.css';\r\nimport './SlideDown.scss';\r\n\r\n\r\nclass MySlideDown extends Component {\r\n  state = {\r\n    isShown: false\r\n  }\r\n\r\n  contentShowHandler = () => {\r\n    this.setState({isShown: !this.state.isShown})\r\n  }\r\n\r\n  render () {\r\n  // console.log(this.state.isShown)\r\n    return (\r\n      <div className=\"slidedown\">\r\n        <button className=\"slidedown-button\" onClick={this.contentShowHandler}>{ !this.state.isShown ? \"Show More\" : \"Hide\" }</button>\r\n        \r\n        {/* <div className=\"slidedown-container\"> */}\r\n             <SlideDown>\r\n               {this.state.isShown && (<div className=\"slidedown-content\">{this.props.children}</div>)}\r\n             </SlideDown>\r\n        {/* </div> */}\r\n            \r\n      \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MySlideDown;","import React from 'react';\r\nimport { Highlight } from 'react-fast-highlight';\r\nimport './hl-theme.css';\r\nimport './CodeSnippet.scss';\r\nconst codeSnippet = (props) => (\r\n\r\n\r\n  \r\n \r\n  <Highlight\r\n    languages={['js']}\r\n    className=\"code-snippet\"\r\n  >\r\n\r\n    {props.code}\r\n  </Highlight>\r\n\r\n  \r\n);\r\n\r\nexport default codeSnippet;","import wiki from '../../assets/wiki.svg';\r\nimport medium from '../../assets/medium.svg';\r\n\r\nexport const logos = {wiki, medium};","import React, { Component } from 'react';\r\nimport '../Visualization.scss';\r\nimport SortVisualization from '../SortVisualization/SortVisualization';\r\nimport SlideDown from '../../SlideDown/SlideDown';\r\nimport CodeSnippet  from '../CodeSnippet/CodeSnippet';\r\n\r\nimport { logos } from '../../UI/Logos';\r\n\r\n\r\nclass SortItem extends Component {\r\n \r\n  render () {\r\n    let links = this.props.links.map(link=>{\r\n      return (\r\n        <a key={`sdlink_${link.link}`} className=\"sortviz-link\" href={link.link} target=\"_blank\" rel=\"noopener noreferrer\"><img src={logos[link.type]} alt=\"\"></img></a>\r\n      )\r\n    })\r\n    let description =  (\r\n      <div className=\"sortviz-descr\">\r\n        <CodeSnippet code={this.props.code || ''}/>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"sortviz-item\">\r\n        <h1 className=\"sortviz-name\">{this.props.name}<sup className=\"sortviz-links\">{links}</sup></h1> \r\n        <SlideDown>{description}</SlideDown>\r\n        <SortVisualization sort={this.props.sort}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortItem;","export const sortName = 'Selection';\r\n\r\n\r\nexport const sortLinks = [\r\n  {\r\n    type: \"wiki\",\r\n    link: \"https://en.wikipedia.org/wiki/Selection_sort\"\r\n  },\r\n  {\r\n    type: \"medium\",\r\n    link: \"https://medium.com/basecs/heapify-all-the-things-with-heap-sort-55ee1c93af82\"\r\n  }\r\n];\r\n\r\nexport const sortFunc = (input, draw, callback) => {\r\n  const array = [...input];\r\n  let i = 0;\r\n  function step() {\r\n    if (i >= array.length - 1) {\r\n      if (callback && typeof callback === \"function\") {\r\n        callback();\r\n      }\r\n      return;\r\n    }\r\n    let min = i;\r\n    for (let j = i + 1; j < array.length; j++) {\r\n      if (array[j].number < array[min].number) {\r\n        min = j;\r\n      }\r\n    }\r\n    let buf = array[i];\r\n    array[i] = array[min];\r\n    array[min] = buf;\r\n    i++;\r\n    draw(array)\r\n    window.requestAnimationFrame(step);\r\n  }\r\n  step()\r\n  return array;\r\n}\r\n\r\n\r\nexport const sortRaw = `const selectionSort = (input) => {\r\n  const array = [...input];\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    let min = i;\r\n    for (let j = i + 1; j < array.length; j++) {\r\n      if (array[j] < array[min]) {\r\n        min = j;\r\n      }\r\n    }\r\n    let temp = array[i];\r\n    array[i] = array[min];\r\n    array[min] = temp;\r\n  }\r\n  return array;\r\n}\r\n`\r\n","export const sortName = 'Insertion';\r\n\r\n\r\nexport const sortLinks = [\r\n\r\n  {\r\n    type: \"wiki\",\r\n    link: \"https://en.wikipedia.org/wiki/Insertion_sort\"\r\n  }\r\n];\r\n\r\nexport const sortFunc = (input, draw, callback) => {\r\n  const array = [...input];\r\n  let i = 1;\r\n  function step() {\r\n    if (i >= array.length) {\r\n      if (callback && typeof callback === \"function\") {\r\n        callback();\r\n      }\r\n      return;\r\n    } \r\n    const current = array[i];\r\n    let j = i;\r\n    while (j > 0 && array[j - 1].number > current.number) {\r\n      array[j] = array[j - 1];\r\n      j--;\r\n    }\r\n    array[j] = current;\r\n    i++;\r\n    draw(array);\r\n    window.requestAnimationFrame(step);\r\n  }\r\n  step()\r\n  return array;\r\n}\r\n\r\nexport const sortRaw = `const insertionSort = (input) => {\r\n  const array = [...input];\r\n  for (let i = 1; i < array.length; i++) {\r\n    const current = array[i];\r\n    let j = i;\r\n    while (j > 0 && array[j - 1] > current) {\r\n      array[j] = array[j - 1];\r\n      j--;\r\n    }\r\n    array[j] = current;\r\n  }\r\n  return array;\r\n}\r\n`","export const sortName = 'Heap';\r\n\r\n\r\nexport const sortLinks = [\r\n  {\r\n    type: \"medium\",\r\n    link: \"https://medium.com/basecs/heapify-all-the-things-with-heap-sort-55ee1c93af82\"\r\n  },\r\n  {\r\n    type: \"wiki\",\r\n    link: \"https://en.wikipedia.org/wiki/Heapsort\"\r\n  }\r\n];\r\n\r\nexport const sortFunc = (input, draw, callback) => {\r\n  const array = [...input];\r\n  buildMaxHeap(array, continueOfSorting);\r\n  return array;\r\n  \r\n  function buildMaxHeap(array, cb) {\r\n    var i;\r\n    i = array.length / 2 - 1;\r\n    i = Math.floor(i);\r\n    // while (i >= 0) {\r\n      function step() {\r\n        if(i<0) {\r\n          cb();\r\n          return;\r\n        };\r\n      heapify(array, i, array.length);\r\n      i -= 1;\r\n      draw(array);\r\n      window.requestAnimationFrame(step)\r\n    }\r\n    step()\r\n  }\r\n  function continueOfSorting() {\r\n    let lastElement = array.length - 1;\r\n    // while (lastElement > 0) {\r\n    step();\r\n    function step() {\r\n      if (lastElement <= 0) {\r\n        if (callback && typeof callback === \"function\") {\r\n          callback();\r\n        }\r\n        return;\r\n      }\r\n      swap(array, 0, lastElement);\r\n      heapify(array, 0, lastElement);\r\n      lastElement -= 1\r\n\r\n      draw(array);\r\n      window.requestAnimationFrame(step)\r\n    }\r\n  }\r\n\r\n  function heapify(heap, i, max) {\r\n    var index, leftChild, righChild;\r\n    while (i < max) {\r\n      index = i;\r\n      leftChild = 2 * i + 1;\r\n      righChild = leftChild + 1;\r\n      if (leftChild < max && heap[leftChild].number > heap[index].number) {\r\n        index = leftChild;\r\n      }\r\n      if (righChild < max && heap[righChild].number > heap[index].number) {\r\n        index = righChild;\r\n      }\r\n      if (index === i) {\r\n        return;\r\n      }\r\n      swap(heap, i, index);\r\n      i = index;\r\n    }\r\n  }\r\n\r\n  function swap(array, firstItemIndex, lastItemInde) {\r\n    var tmp = array[firstItemIndex];\r\n    array[firstItemIndex] = array[lastItemInde];\r\n    array[lastItemInde] = tmp;\r\n  }\r\n}\r\n\r\n\r\nexport const sortRaw = `\r\nconst heapSort = (input) => {\r\n  const array = [...input];\r\n  buildMaxHeap(array);\r\n  let lastElement = array.length - 1;\r\n  while(lastElement > 0) {\r\n    swap(array, 0, lastElement);\r\n    heapify(array, 0, lastElement);\r\n    lastElement -= 1\r\n  }\r\n  return array;\r\n}\r\n\r\nfunction buildMaxHeap(array) {\r\n  let i;\r\n  i = array.length / 2 - 1;\r\n  i = Math.floor(i);\r\n  while (i >= 0) {\r\n    heapify(array, i, array.length);\r\n    i -= 1;\r\n  }\r\n}\r\nfunction heapify(heap, i, max) {\r\n  let index, leftChild, righChild;\r\n  \r\n  while(i < max) {\r\n    index = i;\r\n    leftChild = 2*i + 1;\r\n    righChild = leftChild + 1;\r\n\r\n    if (leftChild < max && heap[leftChild] > heap[index]) {\r\n      index = leftChild;\r\n    }\r\n\r\n    if (righChild < max && heap[righChild] > heap[index]) {\r\n      index = righChild;\r\n    }\r\n      \r\n    if (index == i) {\r\n      return;\r\n    }\r\n\r\n    swap(heap,i, index);\r\n\r\n    i = index;\r\n  }\r\n}\r\n\r\nfunction swap(array, firstItemIndex, lastItemInde) {\r\n  var tmp = array[firstItemIndex];\r\n  array[firstItemIndex] = array[lastItemInde];\r\n  array[lastItemInde] = tmp;\r\n}`","export const sortName = 'Bubble';\r\n\r\n\r\nexport const sortLinks = [\r\n  {\r\n    type: \"wiki\",\r\n    link: \"https://en.wikipedia.org/wiki/Bubble_sort\"\r\n  }\r\n];\r\n\r\nexport const sortFunc = (input, draw, callback) => {\r\n  const array = [...input];\r\n  let i = 0;\r\n\r\n  function step() {\r\n      if (i >= array.length) {\r\n        if (callback && typeof callback === \"function\") {\r\n          callback();\r\n        }\r\n        return;\r\n      }\r\n      for(let j = 0 ; j < array.length - i - 1; j++){ \r\n      if (array[j].number > array[j + 1].number) {\r\n        let temp = array[j];\r\n        array[j] = array[j+1];\r\n        array[j + 1] = temp;\r\n      }\r\n     }\r\n     i++;\r\n     draw(array);\r\n     window.requestAnimationFrame(step);\r\n    }\r\n    step();\r\n    return array;\r\n}\r\n\r\nexport const sortRaw = `const bubbleSort = (input) => {\r\n  const array = [...input];\r\n  for (let i = 0; i < array.length ; i++) {\r\n    for(let j = 0 ; j < array.length - i - 1; j++){ \r\n    if (array[j] > array[j + 1]) {\r\n      let temp = array[j];\r\n      array[j] = array[j+1];\r\n      array[j + 1] = temp;\r\n    }\r\n   }\r\n  }\r\n  return array;\r\n}\r\n`","export const sortName = 'Cocktail';\r\n\r\n\r\nexport const sortLinks = [\r\n  {\r\n    type: \"wiki\",\r\n    link: \"https://en.wikipedia.org/wiki/Shaker_sort\"\r\n  }\r\n];\r\n\r\nexport const sortFunc = (input, draw, callback) => {\r\n  const array = [...input]\r\n  let left = 0;\r\n  let right = array.length - 1;\r\n  let temp;\r\n\r\n  function step() {\r\n    for (let i = left; i < right; i++) {\r\n      if (array[i].number > array[i + 1].number) {\r\n        temp = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = temp;\r\n      }\r\n    }\r\n\r\n    right--;\r\n    for (let i = right; left < i; i--) {\r\n      if (array[i].number < array[i - 1].number) {\r\n        temp = array[i];\r\n        array[i] = array[i - 1];\r\n        array[i - 1] = temp;\r\n      }\r\n    }\r\n    left++;\r\n\r\n    draw(array)\r\n    if (left < right) {\r\n      window.requestAnimationFrame(step)\r\n    } else {\r\n      if (callback && typeof callback === \"function\") {\r\n        callback();\r\n      }\r\n      return;\r\n    }\r\n  }\r\n  step();\r\n  return array;\r\n}\r\n\r\nexport const sortRaw = `const cocktailSort = (input) => {\r\n  const array = [...input]\r\n  let left = 0;\r\n  let right = array.length - 1;\r\n  let temp;\r\n  do {\r\n    for (let i = left; i < right; i++) {\r\n      if (array[i] > array[i + 1]) {\r\n        temp = array[i];\r\n        array[i] = array[i + 1];\r\n        array[i + 1] = temp;\r\n      }\r\n    }\r\n    right--;\r\n    for (let i = right; left < i; i--) {\r\n      if (array[i] < array[i - 1]) {\r\n        temp = array[i];\r\n        array[i] = array[i - 1];\r\n        array[i - 1] = temp;\r\n      }\r\n    }\r\n    left++;\r\n  } while (left < right)\r\n  return array;\r\n}\r\n`","import React, { Component } from 'react';\r\nimport SortItem from './SortItem/SortItem';\r\n// import SortVisualization from './SortVisualization/SortVisualization';\r\nimport * as selectionSort from './algorithms/selectionSort';\r\nimport * as insertionSort from './algorithms/insertionSort';\r\nimport * as heapSort from './algorithms/heapSort';\r\nimport * as bubbleSort from './algorithms/bubbleSort';\r\n\r\nimport * as shakerSort from './algorithms/cocktailSort';\r\n\r\nclass Visualizator extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.sorts = [\r\n      {...selectionSort},\r\n      {...insertionSort},\r\n      {...bubbleSort},\r\n      {...shakerSort},\r\n      {...heapSort},\r\n    ]\r\n  }\r\n  render () {\r\n    const renderedSorts = this.sorts.map((sort) => (\r\n      <SortItem key={`sort_${sort.sortName}`}\r\n                sort={sort.sortFunc} code={sort.sortRaw}\r\n                name={sort.sortName}\r\n                links={sort.sortLinks}/>\r\n      ))\r\n    return (<div className=\"sortviz\">\r\n    <div className=\"sortviz-main\">\r\n      <h1 className=\"sortviz-main-caption\">\r\n       Sorting algorithms visualization<span className=\"sortviz-accent\">;</span>\r\n      </h1>\r\n      <p className=\"sortviz-main-descr\">Not exactly in real time, but beautifull enough :)</p>\r\n      </div>\r\n\r\n      {renderedSorts}\r\n    </div>);\r\n  }\r\n}\r\n\r\nexport default Visualizator;","import React, { Component } from 'react';\nimport './App.css';\nimport Visualizator from  './Components/Visualizator/Visualizator';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <Visualizator/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}